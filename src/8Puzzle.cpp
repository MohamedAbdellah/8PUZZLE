//============================================================================
// Name        : 8Puzzle.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include<iostream>
#include<stdio.h>
#include<stdlib.h>
using namespace std;
#define Size 3

int M_Up  (int a[Size][Size],int,int);
int M_Down(int a[Size][Size],int,int);
int M_L   (int a[Size][Size]);
int M_R   (int a[Size][Size],int,int);
void W_file( int a[Size][Size]);
void F_Zero(int a[Size][Size] ,int *i,int *j);
void Search(int a[Size][Size],int l,int u,int r,int d);
int T_Equal(int a[Size][Size],int b[Size][Size]);


FILE *out;
int goal[Size][Size];
int main()
{
	//int i=0 ,j=0;
	out=fopen("out","w+");
	int init[Size][Size];
  freopen("in","rt",stdin);

//==================== Get Inital State ======================//

  for(int i=0;i<3;i++)
	for(int j=0;j<3;j++)
		scanf("%d",&init[i][j]);

  //==================== Get Goal State ====================//

  for(int i=0;i<3;i++)
	for(int j=0;j<3;j++)
		scanf("%d",&goal[i][j]);

  //======================================================//

  Search(init,1,1,1,1);
  fclose(out);
  return 0;
}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


void W_file(int  a[Size][Size] )
{
	for(int i=0;i<3;i++)
	{
		for(int j=0;j<3;j++)
			{

			fprintf(out, "%d ",a[i][j]);
			}
		fprintf(out, "\n");
	}
	fprintf(out, "             ==========================================================\n");
}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int M_Down(int a[Size][Size],int i,int j)
{
	if(i==0)
	return 0;
	int t=a[i-1][j];
	a[i][j]=t;
	a[i-1][j]=0;
	if(i-1==0)
		return 0;

	return 1;

}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int M_Up(int a[Size][Size],int i,int j)
{
	if(i==Size-1)
  return 0;
	int t=a[i+1][j];
		a[i][j]=t;
		a[i+1][j]=0;
		if(i==Size-2)
		  return 0;
		return 1;
}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int M_R(int a[Size][Size],int i,int j)
{
	if(j==0)
			return 0;

	int t=a[i][j-1];
		a[i][j]=t;
		a[i][j-1]=0;
		if(j-1==0)
			return 0;

		return 1;

}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int M_L(int a[Size][Size])
{
int i,j;
	for(int k=0;k<Size;++k)
			for(int t=0;t<Size;++t)
				if(a[k][t]==0)
				{
					i=k;
					j=t;
					break;
				}
	if((Size-1)==j)
	{
		printf("Iam out \n");
		return 0;

	}
		else{
	int t=a[i][j+1];
		a[i][j]=t;
		a[i][j+1]=0;
return 1;
	}

}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


void F_Zero(int a[Size][Size],int *i,int *j)
{
	for(int k=0;k<Size;++k)
		for(int t=0;t<Size;++t)
			if(a[k][t]==0)
			{
				*i=k;
				*j=t;
			}
}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


int T_Equal(int a[Size][Size],int b[Size][Size])
{
	int cunt =0;
	for(int i=0;i<Size;i++)
		for(int j=0;j<Size;j++)
			if(a[i][j]==b[i][j])
			   cunt++;
	if(cunt==9)
	return 1;
	else return 0;
}


//==========================================================================================//
//=========================================================================================//
//========================================================================================//


void Search(int a[Size][Size],int l,int u,int r,int d)
{
	int i=0,j=0;
	int b[Size][Size];

	for(int k=0;k<3;k++)
		for(int l=0;l<3;l++)
			b[k][l]=a[k][l];


	if(T_Equal(a,goal))
	   {
		fprintf(out,"DONE");
        exit(0);
	   }
	if(l==1)
		{
			//F_Zero(a,&i,&j);
			l=M_L(a);
			W_file(a);
			Search(a,l,u,r,d);

		}

	if(u==1)
		{
		F_Zero(a,&i,&j);
			u=M_Up(a, i, j);
            W_file(a);
			Search(a,l,u,r,d);

		}

	if(r==1)
				{
		F_Zero(a,&i,&j);
					r=M_R(a, i, j);
					W_file(a);
					Search(a,l,u,r,d);
				}


		if(d==1)
				{
			F_Zero(a,&i,&j);
					d=M_Down(a, i, j);
					W_file(a);
					Search(a,l,u,r,d);
				}



}

